import { existsSync, rmSync } from "fs";
import { upload_to_glitch } from "../actions/upload.js";
import { zip } from "../actions/zip.js";
import { tryReadNeedleConfig } from "../utils/needle-config.js";
import { getCurrentDirectory } from "../utils/path-utils.js";
export async function deploy_to_glitch(directory, glitch_url, deployment_key, openUrl) {
    let dist = directory;
    const config = tryReadNeedleConfig({ directory: getCurrentDirectory() });
    if (config?.buildDirectory == directory) {
        dist = config.buildDirectory;
    }
    else {
        dist = directory + "/dist";
    }
    // 1 find output directory (read config if it exists)
    if (existsSync(dist) === false) {
        console.error(`Directory ${dist} does not exist`);
        return false;
    }
    // 2 zip output
    const outputPath = await zip(dist, dist);
    console.log(`Zipped ${dist} to ${outputPath}`);
    // 3 upload
    try {
        await upload_to_glitch(outputPath, glitch_url, deployment_key, openUrl);
    }
    finally {
        if (existsSync(outputPath)) {
            rmSync(outputPath);
        }
    }
}
