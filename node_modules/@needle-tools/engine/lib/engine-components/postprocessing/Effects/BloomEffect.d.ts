import { BloomEffect as _BloomEffect } from "postprocessing";
import { PostProcessingEffect } from "../PostProcessingEffect.js";
import { VolumeParameter } from "../VolumeParameter.js";
/**
 * Bloom can be used to make bright areas in the scene glow.
 * @link Sample https://engine.needle.tools/samples/postprocessing
 * @example
 * ```typescript
 * const bloom = new Bloom();
 * bloom.intensity.value = 1.5;
 * bloom.threshold.value = 0.5;
 * bloom.scatter.value = 0.5;
 * volume.add(bloom);
 * ```
 *
 * @category Effects
 * @group Components
 */
export declare class BloomEffect extends PostProcessingEffect {
    /** Whether to use selective bloom by default */
    static useSelectiveBloom: boolean;
    get typeName(): string;
    /**
     * The bloom threshold controls at what brightness level the bloom effect will be applied.
     * A higher value means the bloom will be applied to brighter areas or lights only
     * @default 0.9
     */
    readonly threshold: VolumeParameter;
    /**
     * Intensity of the bloom effect. A higher value will increase the intensity of the bloom effect.
     * @default 1
     */
    readonly intensity: VolumeParameter;
    /**
     * Scatter value. The higher the value, the more the bloom will scatter.
     * @default 0.3
     */
    readonly scatter: VolumeParameter;
    /**
     * Set to true to use selective bloom when the effect gets created.
     * @default false
     */
    selectiveBloom?: boolean;
    init(): void;
    onCreateEffect(): _BloomEffect;
}
