import { EffectComposer } from "postprocessing";
import { Camera, Object3D, WebGLRenderer, WebGLRenderTarget } from "three";
/**
 * A RenderTexture can be used to render a scene to a texture automatically by assigning it to the `Camera` component's `targetTexture` property.
 * You can then assign the `RenderTexture.texture` to materials to be displayed
 * @example Create a new RenderTexture and assign it to a camera and material
 * ```typescript
 * // create new RenderTexture with a resolution
 * const rt = new RenderTexture(256, 256);
 * // assign to a camera
 * myCameraComponent.targetTexture = rt;
 * // assign to a material
 * myMaterial.map = rt.texture;
 * ```
 */
export declare class RenderTexture extends WebGLRenderTarget {
    /**
     * Render the scene to the texture
     * @param scene The scene to render
     * @param camera The camera to render from
     * @param renderer The renderer or effectcomposer to use
     */
    render(scene: Object3D, camera: Camera, renderer: WebGLRenderer | EffectComposer): void;
    private static _userSet;
    private onBeforeRender;
    private onAfterRender;
}
