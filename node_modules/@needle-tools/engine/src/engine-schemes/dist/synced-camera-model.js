"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.SyncedCameraModel = void 0;
var flatbuffers = require("flatbuffers");
var vec3_js_1 = require("./vec3.js");
var SyncedCameraModel = /** @class */ (function () {
    function SyncedCameraModel() {
        this.bb = null;
        this.bb_pos = 0;
    }
    SyncedCameraModel.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    SyncedCameraModel.getRootAsSyncedCameraModel = function (bb, obj) {
        return (obj || new SyncedCameraModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    SyncedCameraModel.getSizePrefixedRootAsSyncedCameraModel = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new SyncedCameraModel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    SyncedCameraModel.prototype.userId = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    SyncedCameraModel.prototype.guid = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    SyncedCameraModel.prototype.dontSave = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    SyncedCameraModel.prototype.pos = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? (obj || new vec3_js_1.Vec3()).__init(this.bb_pos + offset, this.bb) : null;
    };
    SyncedCameraModel.prototype.rot = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? (obj || new vec3_js_1.Vec3()).__init(this.bb_pos + offset, this.bb) : null;
    };
    SyncedCameraModel.startSyncedCameraModel = function (builder) {
        builder.startObject(5);
    };
    SyncedCameraModel.addUserId = function (builder, userIdOffset) {
        builder.addFieldOffset(0, userIdOffset, 0);
    };
    SyncedCameraModel.addGuid = function (builder, guidOffset) {
        builder.addFieldOffset(1, guidOffset, 0);
    };
    SyncedCameraModel.addDontSave = function (builder, dontSave) {
        builder.addFieldInt8(2, +dontSave, +false);
    };
    SyncedCameraModel.addPos = function (builder, posOffset) {
        builder.addFieldStruct(3, posOffset, 0);
    };
    SyncedCameraModel.addRot = function (builder, rotOffset) {
        builder.addFieldStruct(4, rotOffset, 0);
    };
    SyncedCameraModel.endSyncedCameraModel = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    SyncedCameraModel.finishSyncedCameraModelBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    SyncedCameraModel.finishSizePrefixedSyncedCameraModelBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    return SyncedCameraModel;
}());
exports.SyncedCameraModel = SyncedCameraModel;
