import { Behavior } from './Behavior';
import { Particle } from '../Particle';
import { Vector3 } from '../math';
interface PhysicsResolver {
    resolve(pos: Vector3, normal: Vector3): boolean;
}
export declare function setPhysicsResolver(resolver: PhysicsResolver): void;
export declare function getPhysicsResolver(): PhysicsResolver;
export declare class ApplyCollision implements Behavior {
    resolver: PhysicsResolver;
    bounce: number;
    type: string;
    tempV: Vector3;
    constructor(resolver: PhysicsResolver, bounce: number);
    initialize(particle: Particle): void;
    update(particle: Particle, delta: number): void;
    frameUpdate(delta: number): void;
    toJSON(): any;
    static fromJSON(json: any): Behavior;
    clone(): Behavior;
    reset(): void;
}
export {};
//# sourceMappingURL=ApplyCollision.d.ts.map